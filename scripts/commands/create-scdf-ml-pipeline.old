dataflow config server --uri ${DEMO_DATAFLOW_URI}

stream all destroy --force

stream create --name firehose-proxy --definition \"raw: rabbit --rabbit.supplier.queues=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_QUEUE} --spring.rabbitmq.addresses=amqp://${PRODUCER_SCDF_ML_MODEL_RABBITMQ_USERNAME}:${PRODUCER_SCDF_ML_MODEL_RABBITMQ_PASSWORD}@${PRODUCER_SCDF_ML_MODEL_RABBITMQ_HOST}:5672 --spring.rabbitmq.username=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_USERNAME}  --spring.rabbitmq.password=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_PASSWORD}  --spring.rabbitmq.virtual-host=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST}  --spring.cloud.stream.binders.rabbitBinder.type=rabbit --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.addresses=${DEMO_SCDF_AMQP_ENDPOINT}/${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST}  --spring.cloud.stream.bindings.output.destination=firehose-proxy.raw.firehose-proxy | processed: transform --spel.function.expression='{''firehose_proxy'':'''+payload+'''}'  --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.virtual-host=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST} --spring.cloud.stream.binders.rabbitBinder.type=rabbit | output: log --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.virtual-host=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST} --spring.cloud.stream.binders.rabbitBinder.type=rabbit\" --deploy

stream create --name firehose --definition 's3 --file.consumer.mode=lines --s3.common.endpoint-url=${S3_ENDPOINT} --s3.common.path-style-access=true   --s3.supplier.remote-dir=test --s3.supplier.local-dir=/parent/mldata  --cloud.aws.credentials.accessKey=${S3_ACCESS_KEY} --cloud.aws.credentials.secretKey=${S3_SECRET_KEY} --cloud.aws.region.static=us-east-1 --cloud.aws.stack.auto=false --spring.cloud.stream.binders.rabbitBinder.type=rabbit --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.addresses=${DEMO_SCDF_AMQP_ENDPOINT}/${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST}    | rabbit --rabbit.exchange=test-exchange --rabbit.routing-key=test --spring.rabbitmq.addresses=amqp://${PRODUCER_SCDF_ML_MODEL_RABBITMQ_USERNAME}:${PRODUCER_SCDF_ML_MODEL_RABBITMQ_PASSWORD}@${PRODUCER_SCDF_ML_MODEL_RABBITMQ_HOST}:5672/${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST} --spring.rabbitmq.username=${PRODUCER_SCDF_ML_MODEL_RABBITMQ_USERNAME} --spring.rabbitmq.password=${PRODUCER_SCDF_ML_MODEL_RABBITMQ_PASSWORD} --spring.rabbitmq.virtual-host=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST} --spring.cloud.stream.binders.rabbitBinder.type=rabbit --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.addresses=${DEMO_SCDF_AMQP_ENDPOINT}   --spring.cloud.stream.bindings.input.destination=firehose.s3.firehose' --deploy

stream create --name linear-regression-monitor --definition ':firehose-proxy.raw > build-regression-model-monitor: mlmodel --model_entry=main --git_sync_repo=https://github.com/agapebondservant/sample-ml-step.git --monitor_app=true --monitor_sliding_window_size=200 --monitor_schema_path=data/schema.csv --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.virtual-host=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST} --spring.cloud.stream.binders.rabbitBinder.type=rabbit | log --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.virtual-host=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST} --spring.cloud.stream.binders.rabbitBinder.type=rabbit'  --deploy

stream create --name linear-regression --definition  ':firehose-proxy.processed > build-regression-model: mlmodel --model_entry=main --git_sync_repo=https://github.com/agapebondservant/sample-ml-step.git --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.virtual-host=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST} --spring.cloud.stream.binders.rabbitBinder.type=rabbit | evaluate-regression-model: mlmodel --model_entry=evaluate --git_sync_repo=https://github.com/agapebondservant/sample-ml-step.git  --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.virtual-host=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST} --spring.cloud.stream.binders.rabbitBinder.type=rabbit | log --spring.cloud.stream.binders.rabbitBinder.environment.spring.rabbitmq.virtual-host=${CONSUMER_SCDF_ML_MODEL_RABBITMQ_VIRTUAL_HOST} --spring.cloud.stream.binders.rabbitBinder.type=rabbit' --deploy